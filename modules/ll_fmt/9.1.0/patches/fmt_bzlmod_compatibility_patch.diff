diff --git a/BUILD.bazel b/BUILD.bazel
new file mode 100644
index 00000000..ae422ff1
--- /dev/null
+++ b/BUILD.bazel
@@ -0,0 +1,39 @@
+load("@rules_ll//ll:defs.bzl", "ll_library")
+
+ll_library(
+    name = "fmt",
+    srcs = [
+        "src/format.cc",
+        "src/os.cc",
+    ],
+    exposed_hdrs = [
+        "include/fmt/args.h",
+        "include/fmt/chrono.h",
+        "include/fmt/color.h",
+        "include/fmt/core.h",
+        "include/fmt/format.h",
+        "include/fmt/format-inl.h",
+        "include/fmt/os.h",
+        "include/fmt/ostream.h",
+        "include/fmt/printf.h",
+        "include/fmt/ranges.h",
+        "include/fmt/std.h",
+        "include/fmt/xchar.h",
+    ],
+    compile_flags = [
+        "-std=c++20",
+        "-O3",
+    ],
+    # While rules_ll supports modules, fmt abuses macros to declare exports.
+    # According to clang these exports are invalid C++ so either this is a
+    # compiler bug or fmt uses module incorrectly.
+    # exposed_interfaces = {
+    #     "src/fmt.cc": "fmt",
+    # },
+    exposed_relative_angled_includes = [
+        "include",
+    ],
+    visibility = [
+        "//visibility:public"
+    ],
+)
diff --git a/MODULE.bazel b/MODULE.bazel
new file mode 100644
index 00000000..49a0a681
--- /dev/null
+++ b/MODULE.bazel
@@ -0,0 +1,7 @@
+module(
+    name = "ll_fmt",
+    version = "9.1.0",
+    compatibility_level = 9,
+)
+
+bazel_dep(name="rules_ll", version="20221119.0")
diff --git a/WORKSPACE.bazel b/WORKSPACE.bazel
new file mode 100644
index 00000000..996cee9a
--- /dev/null
+++ b/WORKSPACE.bazel
@@ -0,0 +1 @@
+# Empty.
